name: CI/CD Pipeline to Render
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and test Docker image
        run: |
          docker build -t django-online-store:test .
  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Deploy to Render
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
        run: |
          DEPLOY_RESPONSE=$(curl -X POST https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{}')
          DEPLOY_ID=$(echo $DEPLOY_RESPONSE | jq -r '.id')
          echo "Deploy ID: $DEPLOY_ID"
          # Перевірка статусу з затримкою
          STATUS="in_progress"
          MAX_ATTEMPTS=5
          ATTEMPT=1
          while [ "$STATUS" != "live" ] && [ $ATTEMPT -le $MAX_ATTEMPTS ]; do
            sleep 30
            STATUS=$(curl -X GET https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys/$DEPLOY_ID \
              -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" | jq -r '.status' || echo "error")
            echo "Attempt $ATTEMPT: Deploy status: $STATUS"
            ((ATTEMPT++))
          done
          if [ "$STATUS" = "error" ] || [ "$ATTEMPT" -gt "$MAX_ATTEMPTS" ]; then
            echo "Deploy failed or timed out with status: $STATUS"
            exit 1
          fi